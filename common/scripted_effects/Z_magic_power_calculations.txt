#Magic Power Calculations and manipulation functions. Please use these effects to interact with magical power in events as these functions include failover error checking, and make sure the character is properly initialized for gaining experience in magic casting. 

#List of Functions

# z_magic_power_sequential_addition
# z_magic_power_sequential_subtraction
# z_magic_power_complete_removal
# z_magic_xp_turnon

# Z_magic_power_calculation

# z_magic_power_random

z_magic_power_complete_removal = {
	remove_character_modifier = magic_power_1
	remove_character_modifier = magic_power_2
	remove_character_modifier = magic_power_3
	remove_character_modifier = magic_power_4
}


z_magic_xp_turnon = {
	if = {
		limit = {
			z_has_magic_power_true = yes
			not = {
				trait = vampire_jade_visible
			}
		}
		if = {
			limit = {
				not = {
					check_variable = { which = "cl" value = "1"}
				}
			}
			if = {
				limit = {
					OR = {
						has_character_modifier = magic_power_1
						check_variable == { which = "cl" value = "1"}
					}
				}
				set_variable  = { which = "cl" value = "1"}
				if = {
					limit = {
						not = {
							check_variable = { which = "magicxpthresholdupgrade" value = "25"}
						}
					}
					set_variable  = { which = "magicxpthresholdupgrade" value = "25"}
				}
				if = {
					limit = {
						check_variable = { which = "magicxpthresholddowngrade" value = "-25"}

					}
					set_variable  = { which = "magicxpthresholddowngrade" value = "-25"}
				}
			}
			if = {
				limit = {
					OR = {
						has_character_modifier = magic_power_2
						check_variable == { which = "cl" value = "2"}
					}
				}
				set_variable  = { which = "cl" value = "2"}
				if = {
					limit = {
						not = {
							check_variable = { which = "magicxpthresholdupgrade" value = "30"}
						}
					}
					set_variable  = { which = "magicxpthresholdupgrade" value = "30"}
				}
				if = {
					limit = {
						check_variable = { which = "magicxpthresholddowngrade" value = "-30"}

					}
					set_variable  = { which = "magicxpthresholddowngrade" value = "-30"}
				}
				set_variable = { which = "magicxpthresholdupgrade" value = 30	}
				set_variable = { which = "magicxpthresholddowngrade" value = -30}
			}
			if = {
				limit = {
					OR = {
						has_character_modifier = magic_power_3
						check_variable == { which = "cl" value = "3"}
					}
				}
				set_variable  = { which = "cl" value = "3"}
				if = {
					limit = {
						not = {
							check_variable = { which = "magicxpthresholdupgrade" value = "36"}
						}
					}
					set_variable  = { which = "magicxpthresholdupgrade" value = "36"}
				}
				if = {
					limit = {
						check_variable = { which = "magicxpthresholddowngrade" value = "-36"}
					}
					set_variable  = { which = "magicxpthresholddowngrade" value = "-36"}
				}
			}
			if = {
				limit = {
					OR = {
						has_character_modifier = magic_power_4
						check_variable = { which = "cl" value = "4"}
					}
				}
				if = {
					limit = {
						not = {
							check_variable = { which = "cl" value = "4"}
						}
					}
					set_variable  = { which = "cl" value = "4"}
				}
				if = {
					limit = {
						not = {
							check_variable = { which = "magicxpthresholdupgrade" value = "50"}
						}
					}
					set_variable  = { which = "magicxpthresholdupgrade" value = "50"}
				}
				if = {
					limit = {
						check_variable = { which = "magicxpthresholddowngrade" value = "-50"}

					}
					set_variable  = { which = "magicxpthresholddowngrade" value = "-50"}
				}
			}
		}
		else = {
			Z_magic_power_calculation = yes
		}
	}
}

Z_magic_power_calculation = {
	log = "[This.GetID] started while in Z_magic_power_calculation"
	while = {
		limit = {
			NOT = {
				check_variable = { which = "magicxpthresholdupgrade" which = 0 }
			}
			check_variable = { which = "magicxp" which = "magicxpthresholdupgrade"}
		}
		change_variable = { which = "cl" value = 1}
		set_variable = { which = "magicxp" value = 0}
		multiply_variable = { which = "magicxpthresholdupgrade"	value = 1.1	}
		multiply_variable = { which = "magicxpthresholddowngrade"	value = 1.1	}
	}
	log = "[This.GetID] started while in Z_magic_power_calculation"
	while = {
		limit = {
			not = {
				check_variable = { which = "cl" value = 0}
			}
			check_variable = { which = "magicxp" which = magicxpthresholddowngrade}
		}
		change_variable = { which = "cl" value = -1}
		set_variable = { which = "magicxp" value = 0}
		divide_variable = { which = "magicxpthresholdupgrade" value = 1.1	}
		divide_variable = { which = "magicxpthresholddowngrade" value = 1.1	}
	}
	Z_magic_power_modifier_calculation = yes
}

Z_magic_power_modifier_calculation = {
	if = {
		limit = {
			check_variable = { which = "cl" value = 4}
		}
		z_magic_power_complete_removal = yes
		add_character_modifier = { name = magic_power_4 duration = -1}
	}
	if = {
		limit = {
			check_variable = { which = "cl" value = 3}
			not = {
				check_variable = { which = "cl" value = 4}
			}
		}
		z_magic_power_complete_removal = yes
		add_character_modifier = { name = magic_power_3 duration = -1}
	}
	if = {
		limit = {
			check_variable = { which = "cl" value = 2}
			not = {
				check_variable = { which = "cl" value = 3}
			}
		}
		z_magic_power_complete_removal = yes
		add_character_modifier = { name = magic_power_2 duration = -1}
	}
	if = {
		limit = {
			check_variable = { which = "cl" value = 1}
			not = {
				check_variable = { which = "cl" value = 0}
			}
		}
		z_magic_power_complete_removal = yes
		add_character_modifier = { name = magic_power_1 duration = -1}
	}
}

z_magic_lvl_sequential_increase = {
	if = {
		limit = {
			NOR = {
				OR = {
					has_character_modifier = magic_power_1
					has_character_modifier = magic_power_2
					has_character_modifier = magic_power_3
					has_character_modifier = magic_power_4
				}
				check_variable = { which = "cl" value = "1"}
			}
		}
		set_variable  = { which = "cl" value = "1"}
		add_character_modifier = { name = magic_power_1 duration = -1}
		set_variable  = { which = "magicxpthresholdupgrade" value = "25"}
		set_variable  = { which = "magicxpthresholddowngrade" value = "-25"}
	}
	else_if = {
		limit = {
			check_variable = { which = "cl" value = "2"}
		}
		change_variable = { which = "cl" value = 1 }
		Z_magic_power_modifier_calculation = yes
	}
}
z_magic_lvl_sequential_decrease = {
	if = {
		limit = {
			OR = {
					has_character_modifier = magic_power_1
					check_variable == { which = "cl" value = "1"}
				}
			}
			set_variable  = { which = "cl" value = "0"}
			remove_character_modifier = magic_power_1
			set_variable  = { which = "magicxpthresholdupgrade" value = "25"}
			set_variable  = { which = "magicxpthresholddowngrade" value = "-25"}
		}
	else_if = {
		limit = {
			check_variable = { which = "cl" value = "2"}
		}
		change_variable = { which = "cl" value = -1 }
		Z_magic_power_modifier_calculation = yes
	}
}


z_magic_power_random = {
	z_magic_power_complete_removal = yes
	random_list = {
		8 = {
			add_character_modifier = { name = magic_power_1 duration = -1 }
			set_variable = { which = "cl" value = 1}
		}
		4 = {
			add_character_modifier = { name = magic_power_2 duration = -1 }
			set_variable = { which = "cl" value = 2}
		}
		2 = {
			add_character_modifier = { name = magic_power_3 duration = -1 }
			set_variable = { which = "cl" value = 3}
		}
		1 = {
			add_character_modifier = { name = magic_power_4 duration = -1 }
			set_variable = { which = "cl" value = 4}
		}
	}
}
